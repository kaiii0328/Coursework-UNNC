// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);   
    Register(in=in, load=l0, out=o1);
    Register(in=in, load=l1, out=o2);
   Register(in=in, load=l2, out=o3);
   Register(in=in, load=l3, out=o4);
    Register(in=in, load=l4, out=o5);
    Register(in=in, load=l5, out=o6);
    Register(in=in, load=l6, out=o7);
    Register(in=in, load=l7, out=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4,e=o5, f=o6, g=o7, h=o8, sel=address, out=out);
}